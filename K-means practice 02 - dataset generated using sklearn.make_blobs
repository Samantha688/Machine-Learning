#import libraries
import numpy as np
from sklearn.datasets import make_blobs
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans

#generate dataset 
x,y = make_blobs(n_samples = 1000, n_features = 2, cluster_std = 1.0, 
centers = [(-5,-5),(0,0),(5,5),(5,-3)], shuffle = False, random_state = 10)
plt.scatter(x[:,0], x[:,1], c = 'r', s = 100)

#n_clusters = 4 
km = KMeans(n_clusters = 4).fit(x)
plt.scatter(x[km.labels_==0,0], x[km.labels_==0,1])
plt.scatter(x[km.labels_==1,0], x[km.labels_==1,1])
plt.scatter(x[km.labels_==2,0], x[km.labels_==2,1])
plt.scatter(x[km.labels_==3,0], x[km.labels_==3,1])

#alternative:
for i in range(0,4):
    plt.scatter(x[km.labels_==i,0], x[km.labels_==i,1])

#n_clusters = 7 
km = KMeans(n_clusters = 7).fit(x)
plt.scatter(x[km.labels_==0,0], x[km.labels_==0,1])
plt.scatter(x[km.labels_==1,0], x[km.labels_==1,1])
plt.scatter(x[km.labels_==2,0], x[km.labels_==2,1])
plt.scatter(x[km.labels_==3,0], x[km.labels_==3,1])
plt.scatter(x[km.labels_==4,0], x[km.labels_==4,1])
plt.scatter(x[km.labels_==5,0], x[km.labels_==5,1])
plt.scatter(x[km.labels_==6,0], x[km.labels_==6,1])
plt.scatter(x[km.labels_==7,0], x[km.labels_==7,1])

#alternative: 
for i in range(0,8):
    plt.scatter(x[km.labels_==i,0], x[km.labels_==i,1])

#calculate inertia and plot elbow graph for the reflection point
inertia = []
for i in range(1,8):
    km = KMeans(n_clusters = i).fit(x)
    inertia.append(km.inertia_)

plt.scatter(range(1,8), inertia)
