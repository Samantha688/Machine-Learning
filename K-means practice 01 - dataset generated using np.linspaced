'''
Practice taken from IBM Machine Learning Professional Certificate - Unsupervised machine learning - 04a lab
For detailed explanation, please visit: 
https://lhy688.wordpress.com/2023/02/08/k-means-practice-01-dataset-generated-using-np-linspace/
Blog post "K-means practice 01 - dataset generated using np.linspaced"
'''

#import libraries 
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans

#generate dataset
angle = np.linspace(0,2*np.pi,20,endpoint=False)
fig, axs = plt.subplots(3)
fig.suptitle('Dataset for clustering')
axs[0].plot(range(0,20),np.cos(angle))
axs[1].plot(range(0,20),np.sin(angle))
axs[2].plot(np.cos(angle),np.sin(angle))
X = np.append([np.cos(angle)],[np.sin(angle)],0).transpose()
plt.scatter(X[:,0], X[:,1], c = 'b', alpha = 0.5, s = 20)

#random_state = 20 
km = KMeans(n_clusters = 2, random_state = 20, n_init = 1)
km.fit(X)
plt.scatter(X[km.labels_==0,0], X[km.labels_==0,1], c = 'b', alpha = 0.5, s = 20)
plt.scatter(km.cluster_centers_[0][0],km.cluster_centers_[0][1], c = 'b', marker = 'x', s = 100)
plt.scatter(X[km.labels_==1,0], X[km.labels_==1,1], c = 'b', alpha = 0.5, s = 20)
plt.scatter(km.cluster_centers_[1][0],km.cluster_centers_[1][1],c = 'b', marker = 'x', s = 100)

#random_state = 10
km = KMeans(n_clusters = 2, random_state = 10, n_init = 1).fit(X)
plt.scatter(X[km.labels_==0,0], X[km.labels_==0,1], c = 'b', alpha = 0.5, s = 20)
plt.scatter(km.cluster_centers_[0][0],km.cluster_centers_[0][1],c = 'b', marker = 'x', s = 100)
plt.scatter(X[km.labels_==1,0], X[km.labels_==1,1], c = 'b', alpha = 0.5, s = 20)
plt.scatter(km.cluster_centers_[1][0],km.cluster_centers_[1][1],c = 'b', marker = 'x', s = 100)
