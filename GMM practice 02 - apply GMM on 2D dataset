'''
Practice taken from IBM Machine Learning Professional Certificate - Unsupervised machine learning - GMM
For detailed explanation, please visit: 
https://lhy688.wordpress.com/blog/
Blog post "GMM practice 02 - apply GMM on 2D dataset"
'''

#import libraries 
import numpy as np
import pandas as pd
import scipy.stats as ss
import matplotlib.pyplot as plt
from sklearn.mixture import GaussianMixture
from scipy.stats import multivariate_normal
from itertools import chain
from matplotlib.patches import Ellipse 

#define means, covariance and weights 
mean = [(1,5), (5,1), (1,1)]
cov1 = np.array([[0.2, 1.0],[1.0, 0.7]]) #[0][0] = cov between a1, [1][0] and [0][1] are cov between a1 and a2, [1][1] = cov between a2
cov2 = np.array([[0.8, 1.4],[1.4, 1.2]])
cov3 = np.array([[0.7, 1.3],[1.3, 1.9]])
cov = [cov1, cov2, cov3]
weights = [0.2, 0.5, 0.3]

#create random samples
mixture_idx = np.random.choice(len(mean), size=1000, replace=True, p=weights)
X = np.fromiter(chain.from_iterable(multivariate_normal.rvs(mean=mean[i], cov=cov[i]) for i in mixture_idx), dtype=float)

#reshape from (2000, 0) to (1000, 2)
X.shape = 1000, 2 

xs1 = X[:,0] #first col for plotting 
xs2 = X[:,1] #second col for plotting 

#plot the data
plt.scatter(xs1, xs2, label="data")
#plot the means
L = len(mean)
for l, pair in enumerate(mean):
    plt.scatter(pair[0], pair[1], color='red')
    if l == L-1: #when counter = len(mean)-1 = 2
        break
plt.scatter(pair[0], pair[1], color='red', label="mean") 

#add labels and legends 
plt.xlabel("$x_1$") #subscript
plt.ylabel("$x_2$")
plt.title("Scatter plot of the bivariate Gaussian mixture")
plt.legend()
plt.show()

#fit GMM model 
gm = GaussianMixture(n_components=3, random_state=0, covariance_type='spherical').fit(X)

#covariance and means of model 
gm.covariances_
gm.means_

#plot GMM 
fig, ax = plt.subplots()
labels = gm.fit(X).predict(X) 
ax.scatter(X[:, 0], X[:, 1], c=labels, s=40)

#try different covariance type 
#repeat the plots above with covariance_type parameter = 'full', 'tied', 'diag', 'spherical'
